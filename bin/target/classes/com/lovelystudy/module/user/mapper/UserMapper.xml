<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.yiiu.module.user.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="co.yiiu.module.user.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
    <result column="bio" jdbcType="VARCHAR" property="bio"/>
    <result column="block" jdbcType="BIT" property="block"/>
    <result column="comment_email" jdbcType="BIT" property="commentEmail"/>
    <result column="email" jdbcType="VARCHAR" property="email"/>
    <result column="in_time" jdbcType="TIMESTAMP" property="inTime"/>
    <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
    <result column="password" jdbcType="VARCHAR" property="password"/>
    <result column="reply_email" jdbcType="BIT" property="replyEmail"/>
    <result column="reputation" jdbcType="INTEGER" property="reputation"/>
    <result column="token" jdbcType="VARCHAR" property="token"/>
    <result column="url" jdbcType="VARCHAR" property="url"/>
    <result column="username" jdbcType="VARCHAR" property="username"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, avatar, bio, block, comment_email, email, in_time, mobile, password, reply_email,
    reputation, token, url, username
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    DELETE FROM user
    WHERE id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="co.yiiu.module.user.pojo.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (avatar, bio, block,
    comment_email, email, in_time,
    mobile, password, reply_email,
    reputation, token, url,
    username)
    values (#{avatar,jdbcType=VARCHAR}, #{bio,jdbcType=VARCHAR}, #{block,jdbcType=BIT},
    #{commentEmail,jdbcType=BIT}, #{email,jdbcType=VARCHAR}, #{inTime,jdbcType=TIMESTAMP},
    #{mobile,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{replyEmail,jdbcType=BIT},
    #{reputation,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR},
    #{username,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="co.yiiu.module.user.pojo.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="avatar != null">
        avatar,
      </if>
      <if test="bio != null">
        bio,
      </if>
      <if test="block != null">
        block,
      </if>
      <if test="commentEmail != null">
        comment_email,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="inTime != null">
        in_time,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="replyEmail != null">
        reply_email,
      </if>
      <if test="reputation != null">
        reputation,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="username != null">
        username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="bio != null">
        #{bio,jdbcType=VARCHAR},
      </if>
      <if test="block != null">
        #{block,jdbcType=BIT},
      </if>
      <if test="commentEmail != null">
        #{commentEmail,jdbcType=BIT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null">
        #{inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="replyEmail != null">
        #{replyEmail,jdbcType=BIT},
      </if>
      <if test="reputation != null">
        #{reputation,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="co.yiiu.module.user.pojo.User">
    update user
    <set>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="bio != null">
        bio = #{bio,jdbcType=VARCHAR},
      </if>
      <if test="block != null">
        block = #{block,jdbcType=BIT},
      </if>
      <if test="commentEmail != null">
        comment_email = #{commentEmail,jdbcType=BIT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null">
        in_time = #{inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="replyEmail != null">
        reply_email = #{replyEmail,jdbcType=BIT},
      </if>
      <if test="reputation != null">
        reputation = #{reputation,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="co.yiiu.module.user.pojo.User">
    UPDATE user
    SET avatar      = #{avatar,jdbcType=VARCHAR},
      bio           = #{bio,jdbcType=VARCHAR},
      block         = #{block,jdbcType=BIT},
      comment_email = #{commentEmail,jdbcType=BIT},
      email         = #{email,jdbcType=VARCHAR},
      in_time       = #{inTime,jdbcType=TIMESTAMP},
      mobile        = #{mobile,jdbcType=VARCHAR},
      password      = #{password,jdbcType=VARCHAR},
      reply_email   = #{replyEmail,jdbcType=BIT},
      reputation    = #{reputation,jdbcType=INTEGER},
      token         = #{token,jdbcType=VARCHAR},
      url           = #{url,jdbcType=VARCHAR},
      username      = #{username,jdbcType=VARCHAR}
    WHERE id = #{id,jdbcType=INTEGER}
  </update>
  <!--自定义方法-->
  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    <if test="orderBy != null">
      order by ${orderBy}
    </if>
    <if test="pageNo != null and pageSize != null">
      limit #{pageNo}, #{pageSize}
    </if>
  </select>
  <select id="count" resultType="java.lang.Integer">
    SELECT count(1)
    FROM user
  </select>
  <select id="findUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    <where>
      <if test="token != null">
        token = #{token}
      </if>
      <if test="username != null">
        and username = #{username}
      </if>
      <if test="email != null">
        and email = #{email}
      </if>
    </where>
  </select>
</mapper>