<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.yiiu.module.notification.mapper.NotificationMapper">
  <resultMap id="BaseResultMap" type="co.yiiu.module.notification.pojo.Notification">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="action" jdbcType="VARCHAR" property="action"/>
    <result column="in_time" jdbcType="TIMESTAMP" property="inTime"/>
    <result column="is_read" jdbcType="BIT" property="isRead"/>
    <result column="target_user_id" jdbcType="INTEGER" property="targetUserId"/>
    <result column="topic_id" jdbcType="INTEGER" property="topicId"/>
    <result column="user_id" jdbcType="INTEGER" property="userId"/>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="co.yiiu.module.notification.pojo.Notification">
    <result column="content" jdbcType="LONGVARCHAR" property="content"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, action, in_time, is_read, target_user_id, topic_id, user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from notification
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    DELETE FROM notification
    WHERE id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="co.yiiu.module.notification.pojo.Notification">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into notification (action, in_time, is_read,
    target_user_id, topic_id, user_id,
    content)
    values (#{action,jdbcType=VARCHAR}, #{inTime,jdbcType=TIMESTAMP}, #{isRead,jdbcType=BIT},
    #{targetUserId,jdbcType=INTEGER}, #{topicId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
    #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="co.yiiu.module.notification.pojo.Notification">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into notification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="action != null">
        action,
      </if>
      <if test="inTime != null">
        in_time,
      </if>
      <if test="isRead != null">
        is_read,
      </if>
      <if test="targetUserId != null">
        target_user_id,
      </if>
      <if test="topicId != null">
        topic_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="action != null">
        #{action,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null">
        #{inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRead != null">
        #{isRead,jdbcType=BIT},
      </if>
      <if test="targetUserId != null">
        #{targetUserId,jdbcType=INTEGER},
      </if>
      <if test="topicId != null">
        #{topicId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="co.yiiu.module.notification.pojo.Notification">
    update notification
    <set>
      <if test="action != null">
        action = #{action,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null">
        in_time = #{inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRead != null">
        is_read = #{isRead,jdbcType=BIT},
      </if>
      <if test="targetUserId != null">
        target_user_id = #{targetUserId,jdbcType=INTEGER},
      </if>
      <if test="topicId != null">
        topic_id = #{topicId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="co.yiiu.module.notification.pojo.Notification">
    UPDATE notification
    SET action       = #{action,jdbcType=VARCHAR},
      in_time        = #{inTime,jdbcType=TIMESTAMP},
      is_read        = #{isRead,jdbcType=BIT},
      target_user_id = #{targetUserId,jdbcType=INTEGER},
      topic_id       = #{topicId,jdbcType=INTEGER},
      user_id        = #{userId,jdbcType=INTEGER},
      content        = #{content,jdbcType=LONGVARCHAR}
    WHERE id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="co.yiiu.module.notification.pojo.Notification">
    UPDATE notification
    SET action       = #{action,jdbcType=VARCHAR},
      in_time        = #{inTime,jdbcType=TIMESTAMP},
      is_read        = #{isRead,jdbcType=BIT},
      target_user_id = #{targetUserId,jdbcType=INTEGER},
      topic_id       = #{topicId,jdbcType=INTEGER},
      user_id        = #{userId,jdbcType=INTEGER}
    WHERE id = #{id,jdbcType=INTEGER}
  </update>
  <!--自定义方法-->
  <select id="findByTargetUserId" resultType="map">
    select n.*, u.username, u.avatar, t.id as topic_id, t.title as topic_title
    from notification n left join topic t on n.topic_id = t.id left join user u on n.user_id = u.id
    where n.target_user_id = #{targetUserId}
    <if test="isRead != null">
      and n.is_read = #{isRead,jdbcType=BIT}
    </if>
    <if test="orderBy != null">
      order by ${orderBy}
    </if>
    <if test="pageNo != null and pageSize != null">
      limit #{pageNo}, #{pageSize}
    </if>
  </select>
  <select id="countByTargetUserId" resultType="java.lang.Integer">
    select count(1) from notification where target_user_id = #{targetUserId}
    <if test="isRead != null">
      and is_read = #{isRead,jdbcType=BIT}
    </if>
  </select>
  <update id="updateByIsRead" parameterType="java.lang.Integer">
    UPDATE notification
    SET is_read = TRUE
    WHERE target_user_id = #{targetUserId}
  </update>
  <delete id="deleteNotification">
    delete from notification
    <where>
      <if test="targetUserId != null">
        and target_user_id = #{targetUserId}
      </if>
      <if test="userId != null">
        and user_id = #{userId}
      </if>
      <if test="topicId != null">
        and topic_id = #{topicId}
      </if>
    </where>
  </delete>
</mapper>